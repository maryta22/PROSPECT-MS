# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Prospection(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: int=None, prospect_id: int=None, cedula: str=None, company: str=None, state: int=None, prospection_state: str=None, _date: date=None, program: str=None, channel: str=None):  # noqa: E501
        """Prospection - a model defined in Swagger

        :param id: The id of this Prospection.  # noqa: E501
        :type id: int
        :param prospect_id: The prospect_id of this Prospection.  # noqa: E501
        :type prospect_id: int
        :param cedula: The cedula of this Prospection.  # noqa: E501
        :type cedula: str
        :param company: The company of this Prospection.  # noqa: E501
        :type company: str
        :param state: The state of this Prospection.  # noqa: E501
        :type state: int
        :param prospection_state: The prospection_state of this Prospection.  # noqa: E501
        :type prospection_state: str
        :param _date: The _date of this Prospection.  # noqa: E501
        :type _date: date
        :param program: The program of this Prospection.  # noqa: E501
        :type program: str
        :param channel: The channel of this Prospection.  # noqa: E501
        :type channel: str
        """
        self.swagger_types = {
            'id': int,
            'prospect_id': int,
            'cedula': str,
            'company': str,
            'state': int,
            'prospection_state': str,
            '_date': date,
            'program': str,
            'channel': str
        }

        self.attribute_map = {
            'id': 'id',
            'prospect_id': 'prospect_id',
            'cedula': 'cedula',
            'company': 'company',
            'state': 'state',
            'prospection_state': 'prospection_state',
            '_date': 'date',
            'program': 'program',
            'channel': 'channel'
        }
        self._id = id
        self._prospect_id = prospect_id
        self._cedula = cedula
        self._company = company
        self._state = state
        self._prospection_state = prospection_state
        self.__date = _date
        self._program = program
        self._channel = channel

    @classmethod
    def from_dict(cls, dikt) -> 'Prospection':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Prospection of this Prospection.  # noqa: E501
        :rtype: Prospection
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this Prospection.

        ID of the prospection  # noqa: E501

        :return: The id of this Prospection.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this Prospection.

        ID of the prospection  # noqa: E501

        :param id: The id of this Prospection.
        :type id: int
        """

        self._id = id

    @property
    def prospect_id(self) -> int:
        """Gets the prospect_id of this Prospection.

        ID of the associated prospect  # noqa: E501

        :return: The prospect_id of this Prospection.
        :rtype: int
        """
        return self._prospect_id

    @prospect_id.setter
    def prospect_id(self, prospect_id: int):
        """Sets the prospect_id of this Prospection.

        ID of the associated prospect  # noqa: E501

        :param prospect_id: The prospect_id of this Prospection.
        :type prospect_id: int
        """

        self._prospect_id = prospect_id

    @property
    def cedula(self) -> str:
        """Gets the cedula of this Prospection.

        Identification number of the prospect  # noqa: E501

        :return: The cedula of this Prospection.
        :rtype: str
        """
        return self._cedula

    @cedula.setter
    def cedula(self, cedula: str):
        """Sets the cedula of this Prospection.

        Identification number of the prospect  # noqa: E501

        :param cedula: The cedula of this Prospection.
        :type cedula: str
        """

        self._cedula = cedula

    @property
    def company(self) -> str:
        """Gets the company of this Prospection.

        Company associated with the prospect  # noqa: E501

        :return: The company of this Prospection.
        :rtype: str
        """
        return self._company

    @company.setter
    def company(self, company: str):
        """Sets the company of this Prospection.

        Company associated with the prospect  # noqa: E501

        :param company: The company of this Prospection.
        :type company: str
        """

        self._company = company

    @property
    def state(self) -> int:
        """Gets the state of this Prospection.

        State of the prospection  # noqa: E501

        :return: The state of this Prospection.
        :rtype: int
        """
        return self._state

    @state.setter
    def state(self, state: int):
        """Sets the state of this Prospection.

        State of the prospection  # noqa: E501

        :param state: The state of this Prospection.
        :type state: int
        """

        self._state = state

    @property
    def prospection_state(self) -> str:
        """Gets the prospection_state of this Prospection.

        Current state of the prospection  # noqa: E501

        :return: The prospection_state of this Prospection.
        :rtype: str
        """
        return self._prospection_state

    @prospection_state.setter
    def prospection_state(self, prospection_state: str):
        """Sets the prospection_state of this Prospection.

        Current state of the prospection  # noqa: E501

        :param prospection_state: The prospection_state of this Prospection.
        :type prospection_state: str
        """

        self._prospection_state = prospection_state

    @property
    def _date(self) -> date:
        """Gets the _date of this Prospection.

        Date of the prospection  # noqa: E501

        :return: The _date of this Prospection.
        :rtype: date
        """
        return self.__date

    @_date.setter
    def _date(self, _date: date):
        """Sets the _date of this Prospection.

        Date of the prospection  # noqa: E501

        :param _date: The _date of this Prospection.
        :type _date: date
        """

        self.__date = _date

    @property
    def program(self) -> str:
        """Gets the program of this Prospection.

        Name of the academic program  # noqa: E501

        :return: The program of this Prospection.
        :rtype: str
        """
        return self._program

    @program.setter
    def program(self, program: str):
        """Sets the program of this Prospection.

        Name of the academic program  # noqa: E501

        :param program: The program of this Prospection.
        :type program: str
        """

        self._program = program

    @property
    def channel(self) -> str:
        """Gets the channel of this Prospection.

        Channel used for the prospection  # noqa: E501

        :return: The channel of this Prospection.
        :rtype: str
        """
        return self._channel

    @channel.setter
    def channel(self, channel: str):
        """Sets the channel of this Prospection.

        Channel used for the prospection  # noqa: E501

        :param channel: The channel of this Prospection.
        :type channel: str
        """

        self._channel = channel

openapi: 3.0.1
info:
  title: PROSPECTS-MS
  description: API to manage prospects and prospections.
  version: 1.0.0
servers:
- url: http://localhost:8081
  description: Local server
paths:
  /prospects:
    get:
      tags:
      - Prospects
      summary: Retrieve all prospects
      operationId: prospects_get
      responses:
        "200":
          description: List of prospects with user data
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProspectWithUser'
                x-content-type: application/json
      x-openapi-router-controller: swagger_server.controllers.prospects_controller
    post:
      tags:
      - Prospects
      summary: Create a prospect and its associated user
      operationId: prospects_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProspectRequest'
        required: true
      responses:
        "201":
          description: Prospect and user created successfully
        "400":
          description: Invalid input data
      x-openapi-router-controller: swagger_server.controllers.prospects_controller
  /prospects/{id}:
    get:
      tags:
      - Prospects
      summary: Retrieve a prospect by ID
      operationId: prospects_id_get
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Prospect found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProspectWithUser'
        "404":
          description: Prospect not found
      x-openapi-router-controller: swagger_server.controllers.prospects_controller
    delete:
      tags:
      - Prospects
      summary: Delete a prospect
      operationId: prospects_id_delete
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "204":
          description: Prospect successfully deleted
        "404":
          description: Prospect not found
      x-openapi-router-controller: swagger_server.controllers.prospects_controller
    patch:
      tags:
      - Prospects
      summary: Partially update a prospect
      operationId: prospects_id_patch
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProspectUpdate'
        required: true
      responses:
        "200":
          description: Prospect successfully updated
        "400":
          description: Invalid input data
        "404":
          description: Prospect not found
      x-openapi-router-controller: swagger_server.controllers.prospects_controller
  /prospections:
    get:
      tags:
      - Prospections
      summary: Retrieve all prospections
      operationId: prospections_get
      responses:
        "200":
          description: List of prospections
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Prospection'
                x-content-type: application/json
      x-openapi-router-controller: swagger_server.controllers.prospections_controller
    post:
      tags:
      - Prospections
      summary: Create a prospection
      operationId: prospections_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProspectionRequest'
        required: true
      responses:
        "201":
          description: Prospection created successfully
        "400":
          description: Invalid input data
      x-openapi-router-controller: swagger_server.controllers.prospections_controller
  /prospections/{id}:
    get:
      tags:
      - Prospections
      summary: Retrieve a prospection by ID
      operationId: prospections_id_get
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Prospection found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prospection'
        "404":
          description: Prospection not found
      x-openapi-router-controller: swagger_server.controllers.prospections_controller
    delete:
      tags:
      - Prospections
      summary: Delete a prospection
      operationId: prospections_id_delete
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "204":
          description: Prospection successfully deleted
        "404":
          description: Prospection not found
      x-openapi-router-controller: swagger_server.controllers.prospections_controller
    patch:
      tags:
      - Prospections
      summary: Partially update a prospection
      operationId: prospections_id_patch
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProspectionRequest'
        required: true
      responses:
        "200":
          description: Prospection successfully updated
        "400":
          description: Invalid input data
        "404":
          description: Prospection not found
      x-openapi-router-controller: swagger_server.controllers.prospections_controller
  /prospections/{id}/notes:
    get:
      tags:
      - Notes
      summary: Retrieve notes for a specific prospection
      operationId: prospections_id_notes_get
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: List of notes for the prospection
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Note'
                x-content-type: application/json
        "404":
          description: Prospection not found or no notes available
      x-openapi-router-controller: swagger_server.controllers.notes_controller
  /notes:
    post:
      tags:
      - Notes
      summary: Save a new note
      operationId: notes_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoteRequest'
        required: true
      responses:
        "201":
          description: Note successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
        "400":
          description: Invalid input data
      x-openapi-router-controller: swagger_server.controllers.notes_controller
  /prospections/{id}/emails:
    get:
      tags:
      - Prospections
      summary: Retrieve emails for a specific prospection
      operationId: prospections_id_emails_get
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: List of emails for the prospection
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Email'
                x-content-type: application/json
        "404":
          description: Prospection not found or no emails available
      x-openapi-router-controller: swagger_server.controllers.prospections_controller
  /prospects/{id}/prospections:
    get:
      tags:
      - Prospections
      summary: Retrieve all prospections for a specific prospect
      operationId: prospects_id_prospections_get
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: List of prospections for the given prospect
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Prospection'
                x-content-type: application/json
        "404":
          description: Prospect not found or no prospections available
      x-openapi-router-controller: swagger_server.controllers.prospections_controller
  /prospections/{id}/history:
    get:
      tags:
      - Prospections
      summary: Retrieve the history of a specific prospection
      operationId: prospections_id_history_get
      parameters:
      - name: id
        in: path
        description: The ID of the prospection
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: History of the prospection
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HistoryLog'
                x-content-type: application/json
        "404":
          description: Prospection not found or no history available
      x-openapi-router-controller: swagger_server.controllers.prospections_controller
  /state-prospections:
    get:
      tags:
      - Prospections
      summary: Retrieve all states in the state_prospection table
      operationId: get_state_prospection
      responses:
        "200":
          description: List of states
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StateProspection'
                x-content-type: application/json
        "500":
          description: Server error
      x-openapi-router-controller: swagger_server.controllers.prospections_controller
  /prospections/{id}/state-prospections:
    patch:
      tags:
      - Prospections
      summary: Update state for a prospection
      operationId: prospections_id_state_patch
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/id_stateprospections_body'
        required: true
      responses:
        "200":
          description: Gestion state updated successfully
        "404":
          description: Prospection not found
        "500":
          description: Server error
      x-openapi-router-controller: swagger_server.controllers.prospections_controller
  /cities:
    get:
      tags:
      - Cities
      summary: Retrieve all cities
      operationId: get_all_cities
      responses:
        "200":
          description: List of cities
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/City'
                x-content-type: application/json
        "500":
          description: Server error
      x-openapi-router-controller: swagger_server.controllers.city_controller
components:
  schemas:
    ProspectRequest:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
        prospect:
          $ref: '#/components/schemas/ProspectRequest_prospect'
    ProspectUpdate:
      type: object
      properties:
        state:
          type: integer
          description: The state of the prospect
        first_name:
          type: string
          description: First name of the user associated with the prospect
        last_name:
          type: string
          description: Last name of the user associated with the prospect
        email:
          type: string
          description: Email address of the user associated with the prospect
        phone:
          type: string
          description: Phone number of the user associated with the prospect
        company:
          type: string
          description: Name of the company associated with the prospect
        id_city:
          type: integer
          description: ID of the associated city
        degree:
          type: string
          description: Degree or title of the prospect
      example:
        state: 2
        first_name: Jane
        last_name: Doe
        email: jane.doe@example.com
        phone: "9876543210"
        company: Example Corp
        id_city: 3
        degree: Master in Engineering
    ProspectWithUser:
      type: object
      properties:
        id:
          type: integer
        id_number:
          type: string
        state:
          type: integer
        company:
          type: string
          description: Name of the company associated with the prospect
        user:
          $ref: '#/components/schemas/User'
      example:
        id_number: ID123456
        state: 6
        id: 0
        user:
          last_name: Doe
          email: john.doe@example.com
          phone: "1234567890"
          first_name: John
    Prospection:
      type: object
      properties:
        id:
          type: integer
          description: ID of the prospection
        prospect_id:
          type: integer
          description: ID of the associated prospect
        cedula:
          type: string
          description: Identification number of the prospect
        company:
          type: string
          description: Company associated with the prospect
        state:
          type: integer
          description: State of the prospection
        prospection_state:
          type: string
          description: Current state of the prospection
        date:
          type: string
          description: Date of the prospection
          format: date
        program:
          type: string
          description: Name of the academic program
        channel:
          type: string
          description: Channel used for the prospection
      example:
        id: 1
        prospect_id: 10
        cedula: "1234567890"
        company: Tech Corp
        state: 1
        prospection_state: Creado
        date: 2024-01-01
        program: MBA
        channel: Social Media
    ProspectionRequest:
      type: object
      properties:
        academic_program_id:
          type: integer
        prospect_id:
          type: integer
        date:
          type: string
          format: date
        state:
          type: integer
        channel:
          type: string
          description: Channel used for the prospection
    Note:
      type: object
      properties:
        id:
          type: integer
        prospection_id:
          type: integer
        message:
          type: string
        date:
          type: string
          format: date
      example:
        date: 2000-01-23
        id: 0
        message: Follow-up meeting scheduled
        prospection_id: 6
    Email:
      type: object
      properties:
        id:
          type: integer
        prospection_id:
          type: integer
        sender:
          type: string
        message:
          type: string
        date:
          type: string
          format: date
      example:
        date: 2000-01-23
        id: 0
        message: Prospect email sent
        prospection_id: 6
        sender: no-reply@example.com
    User:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        phone:
          type: string
      example:
        last_name: Doe
        email: john.doe@example.com
        phone: "1234567890"
        first_name: John
    ProspectRequest_prospect:
      type: object
      properties:
        id_number:
          type: string
        state:
          type: integer
        company:
          type: string
          description: Name of the company associated with the prospect
        id_city:
          type: integer
          description: ID of the associated city
        degree:
          type: string
          description: Degree or title of the prospect
      example:
        id_number: ID123456
        state: 1
        company: Tech Corp
        id_city: 1
        degree: Master in Business Administration
    HistoryLog:
      type: object
      properties:
        type:
          type: string
          description: "Type of the history log (e.g., \"state change\" or \"advisor\
            \ change\")"
        description:
          type: string
          description: Description of the log entry
        date:
          type: string
          description: Date when the event occurred
          format: date
      example:
        type: state change
        description: State changed to 'Active'
        date: 2024-01-15
    StateProspection:
      type: object
      properties:
        id:
          type: integer
          description: ID of the state
        description:
          type: string
          description: Description of the state
        state:
          type: integer
          description: Status of the state
      example:
        id: 1
        description: Activo
        state: 1
    id_stateprospections_body:
      type: object
      properties:
        new_state_id:
          type: integer
          description: ID of the new state
      example:
        new_state_id: 2
    NoteRequest:
      type: object
      properties:
        prospection_id:
          type: integer
          description: ID of the associated prospection
        message:
          type: string
          description: The content of the note
      example:
        prospection_id: 1
        message: This is a sample note
    City:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
      example:
        id: 1
        name: Quito


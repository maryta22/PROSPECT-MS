# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ProspectionRequest(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, academic_program_id: int=None, prospect_id: int=None, _date: date=None, state: int=None, channel: str=None, sales_advisor_id: int=None):  # noqa: E501
        """ProspectionRequest - a model defined in Swagger

        :param academic_program_id: The academic_program_id of this ProspectionRequest.  # noqa: E501
        :type academic_program_id: int
        :param prospect_id: The prospect_id of this ProspectionRequest.  # noqa: E501
        :type prospect_id: int
        :param _date: The _date of this ProspectionRequest.  # noqa: E501
        :type _date: date
        :param state: The state of this ProspectionRequest.  # noqa: E501
        :type state: int
        :param channel: The channel of this ProspectionRequest.  # noqa: E501
        :type channel: str
        :param sales_advisor_id: The sales_advisor_id of this ProspectionRequest.  # noqa: E501
        :type sales_advisor_id: int
        """
        self.swagger_types = {
            'academic_program_id': int,
            'prospect_id': int,
            '_date': date,
            'state': int,
            'channel': str,
            'sales_advisor_id': int
        }

        self.attribute_map = {
            'academic_program_id': 'academic_program_id',
            'prospect_id': 'prospect_id',
            '_date': 'date',
            'state': 'state',
            'channel': 'channel',
            'sales_advisor_id': 'sales_advisor_id'
        }
        self._academic_program_id = academic_program_id
        self._prospect_id = prospect_id
        self.__date = _date
        self._state = state
        self._channel = channel
        self._sales_advisor_id = sales_advisor_id

    @classmethod
    def from_dict(cls, dikt) -> 'ProspectionRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ProspectionRequest of this ProspectionRequest.  # noqa: E501
        :rtype: ProspectionRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def academic_program_id(self) -> int:
        """Gets the academic_program_id of this ProspectionRequest.


        :return: The academic_program_id of this ProspectionRequest.
        :rtype: int
        """
        return self._academic_program_id

    @academic_program_id.setter
    def academic_program_id(self, academic_program_id: int):
        """Sets the academic_program_id of this ProspectionRequest.


        :param academic_program_id: The academic_program_id of this ProspectionRequest.
        :type academic_program_id: int
        """

        self._academic_program_id = academic_program_id

    @property
    def prospect_id(self) -> int:
        """Gets the prospect_id of this ProspectionRequest.


        :return: The prospect_id of this ProspectionRequest.
        :rtype: int
        """
        return self._prospect_id

    @prospect_id.setter
    def prospect_id(self, prospect_id: int):
        """Sets the prospect_id of this ProspectionRequest.


        :param prospect_id: The prospect_id of this ProspectionRequest.
        :type prospect_id: int
        """

        self._prospect_id = prospect_id

    @property
    def _date(self) -> date:
        """Gets the _date of this ProspectionRequest.


        :return: The _date of this ProspectionRequest.
        :rtype: date
        """
        return self.__date

    @_date.setter
    def _date(self, _date: date):
        """Sets the _date of this ProspectionRequest.


        :param _date: The _date of this ProspectionRequest.
        :type _date: date
        """

        self.__date = _date

    @property
    def state(self) -> int:
        """Gets the state of this ProspectionRequest.


        :return: The state of this ProspectionRequest.
        :rtype: int
        """
        return self._state

    @state.setter
    def state(self, state: int):
        """Sets the state of this ProspectionRequest.


        :param state: The state of this ProspectionRequest.
        :type state: int
        """

        self._state = state

    @property
    def channel(self) -> str:
        """Gets the channel of this ProspectionRequest.

        Channel used for the prospection  # noqa: E501

        :return: The channel of this ProspectionRequest.
        :rtype: str
        """
        return self._channel

    @channel.setter
    def channel(self, channel: str):
        """Sets the channel of this ProspectionRequest.

        Channel used for the prospection  # noqa: E501

        :param channel: The channel of this ProspectionRequest.
        :type channel: str
        """

        self._channel = channel

    @property
    def sales_advisor_id(self) -> int:
        """Gets the sales_advisor_id of this ProspectionRequest.

        ID of the sales advisor  # noqa: E501

        :return: The sales_advisor_id of this ProspectionRequest.
        :rtype: int
        """
        return self._sales_advisor_id

    @sales_advisor_id.setter
    def sales_advisor_id(self, sales_advisor_id: int):
        """Sets the sales_advisor_id of this ProspectionRequest.

        ID of the sales advisor  # noqa: E501

        :param sales_advisor_id: The sales_advisor_id of this ProspectionRequest.
        :type sales_advisor_id: int
        """

        self._sales_advisor_id = sales_advisor_id

# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class NoteRequest(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, prospection_id: int=None, message: str=None):  # noqa: E501
        """NoteRequest - a model defined in Swagger

        :param prospection_id: The prospection_id of this NoteRequest.  # noqa: E501
        :type prospection_id: int
        :param message: The message of this NoteRequest.  # noqa: E501
        :type message: str
        """
        self.swagger_types = {
            'prospection_id': int,
            'message': str
        }

        self.attribute_map = {
            'prospection_id': 'prospection_id',
            'message': 'message'
        }
        self._prospection_id = prospection_id
        self._message = message

    @classmethod
    def from_dict(cls, dikt) -> 'NoteRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The NoteRequest of this NoteRequest.  # noqa: E501
        :rtype: NoteRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def prospection_id(self) -> int:
        """Gets the prospection_id of this NoteRequest.

        ID of the associated prospection  # noqa: E501

        :return: The prospection_id of this NoteRequest.
        :rtype: int
        """
        return self._prospection_id

    @prospection_id.setter
    def prospection_id(self, prospection_id: int):
        """Sets the prospection_id of this NoteRequest.

        ID of the associated prospection  # noqa: E501

        :param prospection_id: The prospection_id of this NoteRequest.
        :type prospection_id: int
        """

        self._prospection_id = prospection_id

    @property
    def message(self) -> str:
        """Gets the message of this NoteRequest.

        The content of the note  # noqa: E501

        :return: The message of this NoteRequest.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message: str):
        """Sets the message of this NoteRequest.

        The content of the note  # noqa: E501

        :param message: The message of this NoteRequest.
        :type message: str
        """

        self._message = message
